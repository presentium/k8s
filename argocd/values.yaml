global:
  domain: cd.presentium.ch
  image:
    repository: ghcr.io/presentium/argocd
    tag: 2.12.0

configs:
  cm:
    exec.enabled: true
    admin.enabled: false

    statusbadge.enabled: true

    kustomize.buildOptions: '--enable-helm'

    application.resourceTrackingMethod: annotation+label
    application.instanceLabelKey: argocd.argoproj.io/instance

    timeout.reconciliation: 60s

    helm.valuesFileSchemes: >-
      secrets+age-import, secrets+age-import-kubernetes,
      secrets, https

  rbac:
    policy.csv: |
      g, presentium:developers, role:admin
      g, presentium:teachers, role:readonly

  params:
    server.insecure: 'true'
    application.namespaces: 'system, core, apps, monitoring'

  gpg:
    keys:
      # Loïc
      7E243C24EE3BCED2: |
        -----BEGIN PGP PUBLIC KEY BLOCK-----

        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
        =9RFD
        -----END PGP PUBLIC KEY BLOCK-----

      # Christophe
      043123FF2E8BE320: |
        -----BEGIN PGP PUBLIC KEY BLOCK-----

        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
        nURG
        =Yjnk
        -----END PGP PUBLIC KEY BLOCK-----

      # Léa
      508855D4AF4F3E73: |
        -----BEGIN PGP PUBLIC KEY BLOCK-----

        mQMuBGXTd6IRCACqOy9ofT4eGsrtXBPPWM3PczrgLruUbzJp9pc5LpYRuDvGQCF+
        5PrMOkfP3wzJLAZ611T1wRK8NAsAR0l++YhTXWuFYqMo+fJvpSC/otZkTCv0b/io
        ewC07Rrbdd2DF/z4TUv60hi2Gd0tdFQ9Jar3AxI2hTjd2BSOaAFphvhlpXh08DA0
        iA7CVtsSaXf6uzRqrQl538u7zImjh8Tr2mCdMEf5C5cfzHrSSqEhOH44H9ipw1AW
        tS59zIXQNNlMuROs9xveRlLDZ63ZuNo2af936+B2XL0Lk67gm6LOibYlWXIE2E+P
        A6I1xejJUhw35U2zh9kLxVszLwAFozF0heR7AQDtZC2g27CIOPTzsMRvkL+dfkYQ
        uxtwK2qimHsnErxG5wf+LA/aQA/qaS5W4iKDJRKsb0eAnd3rE6AMswmth61H6UnA
        2B5u7LznHxCdBZ3TZyVYePs1R+SfZGl/rVNbpi8LnkHQC+ybtv8SJw4+DZk1Rtzc
        UyfKHHsrj4LcqKQzl4bigdNdItNkXGhW+B1R12LaZ+N3QLpBssMkX+D9qWaDvggZ
        7BvenuRm9ggItKAh1aJkgfDd8XB5wgFxiFhhWREWIajxmZ5W/h0k7ltt6Yw4Dh/h
        FYRqwoyi0+ywfQFakUznMzf6gPgdYapWDPEuwk0bcoIx2hPQtsSZP79K5MBlsPkT
        TLK+cRr9FPz9GRexuuPRTwGUBBOy9C3LZePW/YM28Af9EL5IN/AgozcBIS2kQZSt
        HuFFWKKq/qc17UUN6juN/0pGS2zq5wKNEmtfTm3OsJ1pKLNrihDiK8BijdSEgRMd
        u/zVb9o7S6soMNvwvPBMYI4/VdLGRGdCZfCY63ZNitld2ah44HOWi7P9TNc27pz0
        9F67sy1jq2OLfzRPJQbxx+O90mxd6vQTcNIU/LDAXrbxs1WL8wqW9BqxvT8SIQ/C
        BfLIiA8h9Q+TSLvIh8EKMs2R5ES9XuimSHt6En15kr5FLpoEm8aivP8S/l9fDKbN
        bWGv6hJg0Oqme2IX6gLSumpLNDNnQXx7Mn/bL9Kzd/R6zpBZ+INg8vvFHAG9e9T0
        NLQkTMOpYSBDaGVycGlsbG9kIDxsZWFAY2hlcnBpbGxvZC5jb20+iJAEExEIADgW
        IQR4URswRVRX2Jr1p81QiFXUr08+cwUCZdN3ogIbAwULCQgHAgYVCgkICwIEFgID
        AQIeAQIXgAAKCRBQiFXUr08+cz3KAQDl8odQOJA2Hck80amWj8ROjrjIX7Tqghn0
        Wbtzcy8GsQEAqFVzOAS4tjKNdopb69HIKFkfO85yahfAw/Y0zAWIJQY=
        =HQNu
        -----END PGP PUBLIC KEY BLOCK-----

      # Sacha
      D4760D91C916DE3D: |
        -----BEGIN PGP PUBLIC KEY BLOCK-----

        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
        t8HT8120SE6QExP4
        =nnsX
        -----END PGP PUBLIC KEY BLOCK-----
      # Massimo
      # such empty :(

repoServer:
  serviceAccount:
    create: true
    name: argocd-repo-server
    annotations:
      eks.amazonaws.com/role-arn: arn:aws:iam::123247571664:role/PRES-SOPS-KMS-PRESENTIUM

server:
  ingress:
    enabled: true
    ingressClassName: alb
    controller: aws
    aws:
      serviceType: ClusterIP

notifications:
  create: true
  notifiers:
    # language=yaml
    service.github: |
      appID: 966030
      installationID: 53630273
      privateKey: $github-privateKey
    # language=yaml
    service.webhook.github: |
      url: https://api.github.com
      headers:
        - name: Accept
          value: "application/vnd.github+json"
        - name: Authorization
          value: "Bearer $workflow-dispatch"
    # language=yaml
    service.webhook.discord: |
      url: $discord-webhook-url
      headers:
        - name: Content-Type
          value: application/json
  templates:
    # language=yaml
    template.authentik-deployed: |
      webhook:
        github:
          method: POST
          path: /repos/presentium/infrastructure/actions/workflows/terraform-applications-apply.yml/dispatches
          body: |
            {"ref":"production"}
    # language=yaml
    template.vault-deployed: |
      webhook:
        github:
          method: POST
          path: /repos/presentium/infrastructure/actions/workflows/terraform-applications-apply.yml/dispatches
          body: |
            {"ref":"production"}
    # language=yaml
    template.app-health-degraded: |
      webhook:
        discord:
          method: POST
          body: |
            {
              "embeds": [
                {
                  "title": "Application {{.app.metadata.name}} has degraded",
                  "url": "{{.context.argocdUrl}}/applications/{{.app.metadata.name}}",
                  "color": 16039984,
                  "fields": [
                    {
                      "name": "Application",
                      "value": "{{.app.metadata.name}}",
                      "inline": "true"
                    },
                    {
                      "name": "Health Status",
                      "value": "{{.app.status.health.status}}",
                      "inline": "true"
                    }
                    {{if .app.status.sync.revision}}
                    ,
                    {
                      "name": "Repository",
                      "value": "{{.app.spec.source.repoURL}} @ `{{.app.status.sync.revision | abbrev 12 }}`",
                      "inline": "false"
                    }
                    {{ else }}
                      {{ $sources := .app.spec.sources }}
                      {{ range $index, $revision := .app.status.sync.revisions }}
                      ,
                      {
                        "name": "Repository {{ add1 $index }}",
                        "value": "{{ (index $sources $index).repoURL }} @ `{{ $revision | abbrev 12 }}`",
                        "inline": "false"
                      }
                      {{ end }}
                    {{end}}
                    {{range $index, $c := .app.status.conditions}}
                    ,
                    {
                      "name": "{{$c.type}}",
                      "value": "{{$c.message}}",
                      "inline": "true"
                    }
                    {{end}}
                  ]
                }
              ]
            }
    # language=yaml
    template.app-deployed: |
      message: |
        Application {{.app.metadata.name}} is now running new version of deployments manifests.
      webhook:
        discord:
          method: POST
          body: |
            {
              "embeds": [
                {
                  "title": "Application **{{.app.metadata.name}}** has synced successfully",
                  "url": "{{.context.argocdUrl}}/applications/{{.app.metadata.name}}",
                  "color": 1621652,
                  "fields": [
                    {{if .app.status.sync.revision}}
                    {
                      "name": "Repository",
                      "value": "{{.app.spec.source.repoURL}} @ `{{.app.status.sync.revision | abbrev 12 }}`",
                      "inline": "false"
                    }
                    {{ else }}
                      {{ $sources := .app.spec.sources }}
                      {{ range $index, $revision := .app.status.sync.revisions }}
                      {{if $index}},{{end}}
                      {
                        "name": "Repository {{ add1 $index }}",
                        "value": "{{ (index $sources $index).repoURL }} @ `{{ $revision | abbrev 12 }}`",
                        "inline": "false"
                      }
                      {{ end }}
                    {{end}}
                  ]
                }
              ]
            }
      github:
        repoURLPath: "{{.app.spec.source.repoURL}}"
        revisionPath: "{{.app.status.operationState.syncResult.revision}}"
        status:
          state: success
          label: "continuous-delivery/{{.app.metadata.name}}"
          targetURL: "{{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true"
        deployment:
          state: success
          environment: '{{get .app.metadata.labels "ch.presentium/environment" }}'
          environmentURL: 'https://{{ first (default (list "presentium.ch") .app.status.summary.externalURLs) | trimPrefix "http://" }}'
          logURL: "{{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true"
          autoMerge: false
  subscriptions:
    - triggers:
        - on-health-degraded
        - on-deployed
      recipients:
        - discord
  triggers:
    # language=yaml
    trigger.authentik-deployed: |
      - description: Application syncing has succeeded
        when: app.status.operationState.phase in ['Succeeded']
        send: [ authentik-deployed ]
    # language=yaml
    trigger.vault-deployed: |
      - description: Application syncing has succeeded
        when: app.status.operationState.phase in ['Succeeded']
        send: [ vault-deployed ]
    # language=yaml
    trigger.on-health-degraded: |
      - when: app.status.health.status == 'Degraded'
        send: [ app-health-degraded ]
    # language=yaml
    trigger.on-deployed: |
      - when: app.status.operationState != nil and app.status.operationState.phase in ['Succeeded'] and app.status.health.status == 'Healthy'
        oncePer: (app.metadata.labels["ch.presentium/environment"] ?? "") + app.status.operationState?.syncResult?.revision
        send: [ app-deployed ]

extraObjects:
  - apiVersion: argoproj.io/v1alpha1
    kind: AppProject
    metadata:
      name: global
      namespace: argocd
    spec:
      sourceRepos:
        - '*'
      sourceNamespaces:
        - 'system'
        - 'core'
      destinations:
        - namespace: '*'
          server: '*'
      clusterResourceWhitelist:
        - group: '*'
          kind: '*'
  - apiVersion: argoproj.io/v1alpha1
    kind: AppProject
    metadata:
      name: presentium-staging
      namespace: argocd
    spec:
      sourceRepos:
        - https://github.com/presentium/kubernetes
        - https://github.com/presentium/api
      sourceNamespaces:
        - 'apps'
      destinations:
        - namespace: 'staging-*'
          server: '*'
      clusterResourceWhitelist:
        - group: '*'
          kind: '*'

  - apiVersion: argoproj.io/v1alpha1
    kind: AppProject
    metadata:
      name: presentium-production
      namespace: argocd
    spec:
      sourceRepos:
        - https://github.com/presentium/kubernetes
        - https://github.com/presentium/api
      sourceNamespaces:
        - 'apps'
      destinations:
        - namespace: 'prod-*'
          server: '*'
      clusterResourceWhitelist:
        - group: '*'
          kind: '*'

  - apiVersion: argoproj.io/v1alpha1
    kind: AppProject
    metadata:
      name: monitoring
      namespace: argocd
    spec:
      sourceRepos:
        - https://github.com/presentium/kubernetes
        - https://grafana.github.io/helm-charts
      sourceNamespaces:
        - 'apps'
      destinations:
        - namespace: 'monitoring'
          server: '*'
      clusterResourceWhitelist:
        - group: '*'
          kind: '*'

  - apiVersion: argoproj.io/v1alpha1
    kind: Application
    metadata:
      name: argocd
      namespace: argocd
    spec:
      project: default
      sources:
        - repoURL: ghcr.io/argoproj/argo-helm
          chart: argo-cd
          targetRevision: 7.4.2
          helm:
            valueFiles:
              - $values/argocd/values.yaml
              - $values/argocd/secrets.sops.yaml
        - repoURL: https://github.com/presentium/kubernetes.git
          targetRevision: HEAD
          ref: values
      destination:
        name: in-cluster
        namespace: argocd
      syncPolicy:
        syncOptions:
          - CreateNamespace=true
        automated:
          prune: true
          selfHeal: true

  - apiVersion: argoproj.io/v1alpha1
    kind: Application
    metadata:
      name: core
      namespace: argocd
    spec:
      project: default
      source:
        repoURL: https://github.com/presentium/kubernetes.git
        targetRevision: HEAD
        path: _applications/core
      destination:
        name: in-cluster
        namespace: core
      syncPolicy:
        syncOptions:
          - CreateNamespace=true

  - apiVersion: argoproj.io/v1alpha1
    kind: Application
    metadata:
      name: system
      namespace: argocd
    spec:
      project: default
      source:
        repoURL: https://github.com/presentium/kubernetes.git
        targetRevision: HEAD
        path: _applications/system
      destination:
        name: in-cluster
        namespace: system
      syncPolicy:
        syncOptions:
          - CreateNamespace=true

  - apiVersion: argoproj.io/v1alpha1
    kind: Application
    metadata:
      name: monitoring
      namespace: argocd
    spec:
      project: default
      source:
        repoURL: https://github.com/presentium/kubernetes.git
        targetRevision: HEAD
        path: _applications/monitoring
      destination:
        name: in-cluster
        namespace: monitoring
      syncPolicy:
        syncOptions:
          - CreateNamespace=true

  - apiVersion: argoproj.io/v1alpha1
    kind: ApplicationSet
    metadata:
      name: presentium-api
      namespace: argocd
    spec:
      goTemplate: true
      goTemplateOptions: [ "missingkey=error" ]
      generators:
        - list:
            elements:
              - environment: 'prod'
                githubEnvironment: 'production'
                project: 'presentium-production'
                revision: 'HEAD'
              - environment: 'staging'
                githubEnvironment: 'staging'
                project: 'presentium-staging'
                revision: 'HEAD'
      template:
        metadata:
          name: 'presentium-api-{{ "{{ .environment }}" }}'
          namespace: apps
          annotations:
            notifications.argoproj.io/subscribe.on-deployed.github: ""
          labels:
            ch.presentium/environment: '{{ "{{ .githubEnvironment }}" }}'
        spec:
          project: '{{ "{{ .project }}" }}'
          source:
            repoURL: 'https://github.com/presentium/api.git'
            targetRevision: '{{ "{{ .revision }}" }}'
            path: kubernetes
            helm:
              valueFiles:
                - 'values-{{ "{{ .environment }}" }}.yaml'
          destination:
            server: 'https://kubernetes.default.svc'
            namespace: '{{ "{{ .environment }}" }}-presentium'
          syncPolicy:
            syncOptions:
              - CreateNamespace=true
            automated:
              prune: true
              selfHeal: true
